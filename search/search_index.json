{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"docs/","title":"Docs Home","text":""},{"location":"docs/#welcome-to-the-nextui-docs","title":"Welcome to the NextUI Docs!","text":"<p>A powerful but understated CFW for TrimUI Brick &amp; Smart Pro. </p>"},{"location":"docs/#about-nextui","title":"About NextUI","text":"<p>NextUI is a custom firmware (CFW) for the TrimUI Brick &amp; Smart Pro retro gaming handhelds.</p> <p>It was started by @ro8inmorgan as a fork of the popular MinUI CFW so they could implement changes that were determined to be outside the scope of the original project.</p> <p>NextUI quickly took off and became especially popular on the TrimUI devices.</p>"},{"location":"docs/#features","title":"Features","text":"<p>NextUI officially supports the TrimUI Brick and TrimUI Smart Pro gaming handhelds.</p> <p>It features a rebuilt emulation engine and tons of added features outlined below. Note: For other devices we recommend checking out MinUI.</p> <ul> <li>Fixed both screen tearing and sync stutter problems of MinUI by rebuilding the emulator engine core</li> <li>Game switcher menu (Onion OS style) by @frysee</li> <li>High quality audio, due to advanced resampling engine   using libsamplerate (with quality/performance setting per emulator)</li> <li>Much lower latency (average 20ms, 1 frame of 60fps)</li> <li>Game art/media support</li> <li>Game time tracker!</li> <li>Cheats support</li> <li>Overlays support!</li> <li>Dynamic cpu speed scaling (keeps your device cool and extends battery life, but gives the performance right when   needed)</li> <li>Custom bootlogos contributed by @SolvalouArt</li> <li>Color and font settings to customize the NextUI interface</li> <li>Menu animations</li> <li>LED control, change colors, effects, brightness</li> <li>LED indicators, low battery, stand by, charging (brightness can be set seperately)</li> <li>Haptic feedback in the menu by @ExonakiDev</li> <li>Ambient LED mode, the LEDS act like Ambient light TV's for extra immersion, configurable per emulator</li> <li>Screen color temperature and brightness controls</li> <li>Deep Sleep mode, gives instant ON and avoids the overheat bug on the Brick   by @zhaofengli</li> <li>Battery Monitoring including history graph and time left prediction</li> <li>Scrolling animated titles for longer game names</li> <li>Updated and optimized build emulation cores</li> <li>Rumble strength fixed and is now variable as used by the games</li> <li>FBNeo Arcade screen rotation</li> <li>PAL Mode</li> <li>Next font supports CJK for JP/CN etc rom names</li> <li>Lot of other smaller fixes and optimizations</li> </ul>"},{"location":"docs/#future-plans","title":"Future Plans","text":"<ul> <li>Bluetooth and wifi integrated</li> <li>Configurable FN and switch buttons</li> <li>More compatibility testing with different emulators and fix/improve if necessary</li> <li>RetroAchievements</li> <li>Shaders</li> <li>Probably we think of a lot of other stuff a long the way to add :D</li> <li>Once everything is to my liking I will look into porting this to more devices</li> <li>Clean up all MinUI code and strip it from all stuff for legacy devices etc.</li> </ul>"},{"location":"docs/#discord-community","title":"Discord Community","text":"<p>NextUI has a vibrant Discord community. Here you can talk about new and upcoming features, ask for help and contribute to the community.</p> <p>Many of our members produce custom Paks add to the functionality of NextUI.</p> <p>The more artistically inclined among us make custom emulator overlays and themes.</p> <p>Don't be shy, come join us! |   Discord Invite</p>"},{"location":"docs/#kudos","title":"Kudos","text":"<p>Many minds make us whole. NextUI is a product of its community.</p> <p>Special thanks to @shauninman for their original work on MinUI and to @ro8inmorgan and @frysee for their tireless efforts improving the core NextUI experience.</p>"},{"location":"customizing/game-artwork/","title":"Game Artwork","text":"<p>NextUI looks for accompanying media for each emulator under <code>/Roms/[Emulator]/.media</code> folder. Create the <code>.media</code> folder if it does not exist. Put an image in <code>PNG</code> format with the exact same name as the ROM file. NextUI will automatically scale or resize the media file.</p> <p>If you have a game at <code>/Roms/Emulator/game.zip</code>, then the corresponding artwork file would be <code>/Roms/Emulator/.media/game.png</code>.</p> <p>For a more concrete example:</p> <pre><code># With an SFC game at:\n# /Roms/SFC/My Awesome Game.smc\n/Roms/SFC/.media/My Awesome Game.png\n</code></pre> <p>The Artwork Scraper pak can also be used to automatically download artwork for your device.</p>"},{"location":"customizing/theming/emulator-icons/","title":"Adding Emulator Icons","text":"<p>Create a <code>.media</code> directory under the corresponding folder to create icons for Emulators, Collections and Tools.</p> <p>For example:</p> <pre><code>SD_CARD\n\u251c\u2500 .media/\n\u2502  \u251c\u2500 Collections.png\n\u2502  \u251c\u2500 Recently Played.png\n\u251c\u2500 Collections/\n\u2502  \u251c\u2500 .media/\n\u2502  \u2502  \u251c\u2500 Collection 1.png\n\u2502  \u2502  \u251c\u2500 Collection 2.png\n\u251c\u2500 Roms/\n\u2502  \u251c\u2500 .media/\n\u2502  \u2502  \u251c\u2500 GBA.png\n\u2502  \u2502  \u251c\u2500 SFC.png\n\u2502  \u2502  \u251c\u2500 Custom Emulator Name (GBC).png\n\u2502  \u2502  \u251c\u2500 etc...\n\u251c\u2500 Tools/\n\u2502  \u251c\u2500 .media/\n\u2502  \u2502  \u251c\u2500 tg5040.png\n</code></pre>"},{"location":"customizing/theming/overlays/","title":"Emulator Overlays","text":"<p>Overlays are only supported by libretro emulators</p> <p>Standalone emulators installed via Paks do not support NextUI overlays.</p> <p>NextUI looks for accompanying media for each emulator under the <code>/Overlays/[System]</code> folder. The <code>System</code> corresponds to the name of the Emu Pak specified in your Emulator folder name within parenthesis. In this folder you can add 5 overlay PNG files, named overlay1.png to overlay5.png.</p> <p>For example:</p> <pre><code># For /Roms/Game Boy Color (GBA)\n/Overlays/GBA/overlay1.png\n/Overlays/GBA/overlay2.png\n/Overlays/GBA/overlay3.png\n/Overlays/GBA/overlay4.png\n/Overlays/GBA/overlay5.png\n\n# For /Roms/Super Nintendo (SFC)\n/Overlays/SFC/overlay1.png\n/Overlays/SFC/overlay2.png\n/Overlays/SFC/overlay3.png\n/Overlays/SFC/overlay4.png\n/Overlays/SFC/overlay5.png\n</code></pre> <p>When in game, hit the <code>Menu</code> button and navigate to <code>Options -&gt; Frontend</code>. This will display an overlay setting to choose between overlay 1 to 5 or none.</p>"},{"location":"getting-started/","title":"Getting Started with NextUI","text":"<p>Read before continuing!</p> <p>NextUI officially supports only the TrimUI Brick and the TrimUI Smart Pro.</p> <p>These steps in this wiki based on those devices with the stock operating system.</p> <p>Before beginning, please upgrade to the latest version.</p> <p>TrimUI GitHub </p>"},{"location":"getting-started/#what-you-will-need","title":"What you will need","text":"<ul> <li>A TrimUI Brick or TrimUI Smart Pro running the stock operating system.</li> <li>A fresh micro SD card from a reputable vendor (SanDisk, Samsung etc.)<ul> <li>The size of the card depends on the size of the ROMs you plan to play</li> </ul> </li> <li>Software on your computer to format the SD Card<ul> <li>On macOS, use built-in Disk Utility application</li> <li>On Windows, use SD   Association's SD Memory Card Formatter</li> </ul> </li> <li>The latest release of NextUI from the GitHub Repo .<ul> <li>At minimum, you will need the <code>base.zip</code> file. </li> <li>If you want additional goodies, download the <code>extras.zip</code> as well.</li> </ul> </li> </ul>"},{"location":"getting-started/bios/","title":"Required BIOS","text":"<p>Some emulators require or perform better with the official BIOS.</p> <p>NextUI is strictly BYOB and will not provide them nor links to them.</p> <p>Google is your friend.</p> <p>Use the table below to help you find and install the BIOS files you need.</p> <p>BIOS file names are case-sensitive!</p> System Tag File Name(s) BIOS Directory Famicom FC disksys.rom SDCARD_ROOT/Bios/FC/disksys.rom Game Boy GB gb_bios.bin SDCARD_ROOT/Bios/GB/gb_bios.bin Game Boy Color GBC gbc_bios.bin SDCARD_ROOT/Bios/GBC/gbc_bios.bin Game Boy Advance GBA gba_bios.bin SDCARD_ROOT/Bios/GBA/gba_bios.bin Game Boy Advance MGBA gba_bios.bin SDCARD_ROOT/Bios/MGBA/gba_bios.bin Mega Drive / Genesis MD bios_CD_E.binbios_CD_J.binbios_CD_U.bin SDCARD_ROOT/Bios/MD/bios_CD_E.binSDCARD_ROOT/Bios/MD/bios_CD_J.binSDCARD_ROOT/Bios/MD/bios_CD_U.bin PC Engine PCE syscard3.pce SDCARD_ROOT/Bios/PCE/syscard3.pce Pok\u00e9mon Mini PKM bios.min SDCARD_ROOT/Bios/PKM/bios.min Sony PlayStation PS psxonpsp660.bin SDCARD_ROOT/Bios/PS/psxonpsp660.bin Super Game Boy SGB sgb.bios SDCARD_ROOT/Bios/SGB/sgb.bios"},{"location":"getting-started/installation/","title":"Installation Instructions","text":"<ol> <li>Insert the micro SD Card into your computer.</li> <li>Ensure that the SD Card is formatted as a FAT32 filesystem.<ul> <li>If not, use the specified tools in getting started to format the card as FAT32.</li> </ul> </li> </ol> <p>Formatting will erase all data from the SD Card. If there is anything important on the card please back it up.</p> <ol> <li>Find and unzip <code>base.zip</code> that you downloaded from the GitHub Releases Page.</li> <li>Open the unzipped directory and copy <code>minui.zip</code> and the <code>trimui</code> directory to the root of your SD Card.</li> </ol> <p>Do not unzip <code>minui.zip</code>! Copy it to the root of the SD Card as is.</p> <ol> <li>Eject your SD Card safely from your computer and insert it back into your device.</li> <li>Power on your device. A screen will display stating NextUI is being installed.<ul> <li>Be patient while it installs. Do not turn off the power to your device during installation.</li> <li>Your device may turn off after installation is complete.</li> </ul> </li> <li>Turn on your device and enjoy NextUI!</li> </ol>"},{"location":"getting-started/installation/#installing-the-extras-package","title":"Installing the Extras Package","text":"<ol> <li>Complete the installation steps above first.</li> <li>Eject the SD Card from your device and plug it back into your computer.</li> <li>Unzip <code>extras.zip</code>.</li> <li>Copy all the contents (excluding <code>README.txt</code>) to the root of your SD Card.<ul> <li>When prompted about duplicate files choose to merge.</li> </ul> </li> </ol> <p>Attention macOS users! Finder does not support merging when you copy and paste directories.You will have to move content manually to the proper location.</p> <ol> <li>Eject your SD Card safely from your computer and insert it back into your device.</li> <li>Power on your device and enjoy your extra goodies!</li> </ol> <p>The <code>extras.zip</code> file is maintained by MinUI.</p> <p>In the future we may include extras for the supported systems in the base zip file. </p>"},{"location":"getting-started/managing-saves/","title":"Managing Saves","text":"<p>NextUI places all save files by system in <code>SDCARD_ROOT/Saves</code>.</p>"},{"location":"getting-started/managing-saves/#retroarch-srm-support","title":"RetroArch .srm Support","text":"<p>By default, NextUI uses the emulator's default save file format.</p> <p>To enable RetroArch .srm save support create a blank file in <code>SDCARD_ROOT/.userdata/shared</code>.</p> <p>After making this change any existing save files will have to be renamed.</p> <p>Directories and files that start with a period are hidden by default.</p> <p>Windows Users: Open File Explorer, click the View Tab, look for the Show / Hide group and check the show hidden files box.</p> <p>macOS Users: With a Finder window open use the following keyboard shortcut <code>Command + Shift + A</code>.</p>"},{"location":"getting-started/roms/","title":"Adding ROMs","text":"<p>NextUI automatically creates a \"Roms\" folder at the SD card root containing folders for each console NextUI currently supports.</p> <p>You can rename these folders however you like; however, you must keep the uppercase tag name in parentheses in order to retain the mapping to the correct emulator (eg. \"Nintendo Entertainment System (FC)\" could be renamed to \" Nintendo (FC)\", \"NES ( FC)\", or \"Famicom (FC)\").</p> <p>When one or more folder share the same display name (eg. \"Game Boy Advance (GBA)\" and \"Game Boy Advance (MGBA)\") they will be combined into a single menu item containing the roms from both folders (continuing the previous example, \"Game Boy Advance\"). This allows opening specific roms with an alternate pak.</p>"},{"location":"getting-started/roms/#disc-based-games","title":"Disc-based games","text":"<p>To streamline launching multi-file disc-based games with NextUI place your bin/cue (and/or iso/wav files) in a folder with the same name as the cue file. NextUI will automatically launch the cue file instead of navigating into the folder when selected, e.g.</p> <pre><code>  Tony Hawk's Pro Skater 2 (USA)/\n      Tony Hawk's Pro Skater 2 (USA).bin\n      Tony Hawk's Pro Skater 2 (USA).cue\n</code></pre> <p>For multi-disc games, put all the files for all the discs in a single folder. Then create an m3u file in that folder ( just a text file containing the relative path to each disc's cue file on a separate line) with the same name as the folder. Instead of showing the entire messy contents of the folder, NextUI will launch the appropriate cue file, eg. For a \"Final Fantasy VII\" folder structured like this:</p> <pre><code>  Final Fantasy VII (USA)/\n    Final Fantasy VII (USA).m3u\n    Final Fantasy VII (USA) (Disc 1).bin\n    Final Fantasy VII (USA) (Disc 1).cue\n    Final Fantasy VII (USA) (Disc 2).bin\n    Final Fantasy VII (USA) (Disc 2).cue\n    Final Fantasy VII (USA) (Disc 3).bin\n    Final Fantasy VII (USA) (Disc 3).cue\n</code></pre> <p>The m3u file would contain just:</p> <pre><code>  Final Fantasy VII (USA) (Disc 1).cue\n  Final Fantasy VII (USA) (Disc 2).cue\n  Final Fantasy VII (USA) (Disc 3).cue\n  ...\n</code></pre> <p>When a multi-disc game is detected the in-game menu's Continue item will also show the current disc. Press left or right to switch between discs.</p> <p>NextUI also supports chd files and official pbp files (multi-disc pbp files larger than 2GB are not supported). Regardless of the multi-disc file format used, every disc of the same game share the same memory card and save state slots.</p>"},{"location":"getting-started/roms/#collections","title":"Collections","text":"<p>A collection is just a text file containing an ordered list of full paths to rom, cue, or m3u files. These text files live in the \"Collections\" folder at the root of your SD card, eg. \"/Collections/Metroid series.txt\" might look like this:</p> <pre><code>  /Roms/GBA/Metroid Zero Mission.gba\n  /Roms/GB/Metroid II.gb\n  /Roms/SNES (SFC)/Super Metroid.sfc\n  /Roms/GBA/Metroid Fusion.gba\n</code></pre> <p>If you disable all viable folders under 'Roms', the 'Collections' folders contents will populate the main screen instead of being nested in the 'Collections' folder in the UI.</p>"},{"location":"getting-started/roms/#display-names","title":"Display names","text":"<p>Certain (unsupported arcade) cores require roms to use arcane file names. You can override the display name used throughout NextUI by creating a map.txt in the same folder as the files you want to rename. One line per file, <code>rom.ext</code> followed by a single tab followed by <code>Display Name</code>. You can hide a file by adding a <code>.</code> at the beginning of the display name. eg. The 'Collections' folder needs its own map.txt file as well.</p> <pre><code>  neogeo.zip    .Neo Geo Bios\n  mslug.zip Metal Slug\n  sf2.zip   Street Fighter II\n</code></pre>"},{"location":"getting-started/roms/#adding-cheats","title":"Adding Cheats","text":"<p>Cheats use RetroArch .cht file format. Many cheat files are here.</p> <p>Cheat file name needs to match ROM name, and go underneath the \"Cheats\" directory.</p> <p>For example, <code>/Cheats/GB/Super Mario Land (World).zip.cht</code>.</p> <p>When a cheat file is detected, it will show up in the \"cheats\" menu item in game.</p> <p>Note: Not all cheats work with all cores.</p>"},{"location":"getting-started/updating/","title":"Updating an Existing Install","text":"<ol> <li>Eject your NextUI SD Card and insert it into your computer.</li> <li>Download a fresh copy of <code>base.zip</code> from from the GitHub Releases Page.</li> <li>Find and unzip <code>base.zip</code>.</li> <li>Open the unzipped directory and copy <code>miniui.zip</code> and the <code>trimui</code> directory to the root of your SD Card.</li> </ol> <p>Do not unzip <code>minui.zip</code>! Copy it to the root of the SD Card as is.</p> <p>You can safely overwrite / replace the <code>trimui</code> directory when performing the copy.</p> <ol> <li>Eject your SD Card safely from your computer and insert it back into your device.</li> <li>Power on your device. A screen will display stating NextUI is being updated.<ul> <li>Be patient while it updates. Do not turn off the power to your device during the update.</li> <li>Your device may turn off after update is complete.</li> </ul> </li> <li>Turn on your device and enjoy the update!</li> </ol>"},{"location":"paks/","title":"NextUI Paks","text":"<p>NextUI allows you to add functionality to the system in the form of Paks.</p> <p>These Paks can range from tools to additional emulators.</p>"},{"location":"paks/community-favorites/","title":"Community Favorite Paks","text":"<p>This is a non-exhaustive list of Paks beloved by our community.</p>"},{"location":"paks/community-favorites/#the-must-haves","title":"The Must Haves","text":"<p>Wi-Fi shows Wi-Fi status, scans for networks, and lets you configure a connection all on device</p> <p>OTA Updater a Pak for updating NextUI on-device (aka OTA), Wi-Fi connection is required</p>"},{"location":"paks/community-favorites/#game-management","title":"Game Management","text":"<p>Artwork Scraper scrapes artwork for your ROMs</p> <p>Collections Manager make collections of your ROMs to keep them organized</p> <p>Favorites a Pak to manage a favorites collection</p> <p>Gallery a simple gallery for your screenshots</p> <p>Mortar a download client that supports RomM, SMB, Megathread, Apache / nginx mod_autoindex and arbitrary HTML tables.</p> <p>Random Game loads a random game in your game library</p> <p>Screenshot Monitor allows you to take screenshots using the function keys</p>"},{"location":"paks/community-favorites/#file-management","title":"File Management","text":"<p>Cloud Backups a Pak to back up saves, screenshots and other folders to cloud storage providers like Google Drive and Dropbox.</p> <p>Filebrowser HTTP Server via Filebrowser, what OnionOS uses</p> <p>FTP Server via ftpserver, a lighter-weight ftp server implementation</p> <p>FTP Server with Web UI via sftpgo, with both FTP and a Web UI</p> <p>HTTP Server via dufs, what Allium uses</p> <p>Syncthing runs Syncthing on your device, for syncing against a remote Syncthing server</p>"},{"location":"paks/community-favorites/#miscellaneous","title":"Miscellaneous","text":"<p>Simple Mode: a Pak for managing simple mode</p>"},{"location":"paks/community-favorites/#developer-tools","title":"Developer Tools","text":"<p>Developer keeps the device on while accessing via adb/ssh</p> <p>Remote Terminal for remote terminal access over a browser</p> <p>Report generates a development report for debugging the device</p> <p>SSH Server for ssh access to the device via dropbear</p> <p>Terminal for Terminal access on the device itself via TermSP</p>"},{"location":"paks/making-a-pak/","title":"Making a Pak","text":""},{"location":"paks/standalone-emulators/","title":"Standalone Emulator Paks","text":"<p>A quick note about standalone emulators!</p> <p>Standalone emulators do not support overlays and are not as tightly integrated into NextUI.</p> <ul> <li>Dreamcast</li> <li>Nintendo DS</li> <li>Nintendo 64</li> <li>Pico-8</li> </ul>"},{"location":"paks/standalone-emulators/#installing-standalone-emulators","title":"Installing Standalone Emulators","text":"<ol> <li>Download the zip file from the releases section of the above GitHub Repositories.</li> <li>Unzip the release.</li> <li>Create a folder named <code>Emu</code> at the root of your SD Card if it does not already exist.</li> <li>Copy the unzipped Pak to this <code>Emu</code> directory.</li> <li>Follow any additional steps outlined in the respective repository.</li> </ol>"},{"location":"support/faq/","title":"Frequently Asked Questions","text":"<p>Here are the answers to questions that come up a ton. If you have a question that isn't answered here hit up the Discord  .</p>"},{"location":"support/faq/#where-can-i-download-nextui","title":"Where can I download NextUI?","text":"<p>You can always find the latest NextUI release on our GitHub Repo.</p>"},{"location":"support/faq/#how-do-i-install-update","title":"How do I install / update?","text":"<p>For a fresh install of NextUI, follow our installation guide.</p> <p>Already a NextUI user? Follow our updating guide to grab the latest release.</p>"},{"location":"support/faq/#what-systems-are-supported","title":"What systems are supported?","text":""},{"location":"support/faq/#included-in-the-base-cfw","title":"Included in the Base CFW","text":"<ul> <li>Game Boy</li> <li>Game Boy Color</li> <li>Game Boy Advance</li> <li>Nintendo Entertainment System</li> <li>Super Nintendo Entertainment System</li> <li>Sega Genesis</li> <li>PlayStation</li> </ul>"},{"location":"support/faq/#available-from-a-third-party","title":"Available from a Third Party","text":"<ul> <li>Neo Geo Pocket(and Color)</li> <li>Pico-8</li> <li>Poke\u0301mon mini</li> <li>Sega Game Gear</li> <li>Sega Master System</li> <li>Super Game Boy</li> <li>TurboGrafx-16 (and TurboGrafx-CD)</li> <li>Virtual Boy</li> <li>Arcade (CPS, MAME, etc)</li> </ul>"},{"location":"support/faq/#why-am-i-only-seeing-tools","title":"Why am I only seeing Tools?","text":"<p>Ensure that you have a <code>Roms</code> folder at the root of your SD Card with at least one ROM file.</p> <p>For more info visit the add roms page.</p>"}]}